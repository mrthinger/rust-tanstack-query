{"openapi":"3.1.0","info":{"title":"","description":"an example API","version":""},"paths":{"/hello":{"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/trade":{"get":{"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TradeRef"}}}}}}}},"components":{"schemas":{"ApiKeyLocation":{"type":"string","enum":["query","header","cookie"]},"Components":{"description":"Holds a set of reusable objects for different aspects of the OAS.\n All objects defined within the components object will have no effect\n on the API unless they are explicitly referenced from properties\n outside the components object.","type":"object","properties":{"callbacks":{"description":"An object to hold reusable Callback Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Map_of_ReferenceOr_for_PathItem"}},"examples":{"description":"An object to hold reusable Example Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Example"}},"headers":{"description":"An object to hold reusable Header Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Header"}},"links":{"description":"An object to hold reusable Link Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Link"}},"parameters":{"description":"An object to hold reusable Parameter Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Parameter"}},"pathItems":{"description":"An object to hold reusable Path Item Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_PathItem"}},"requestBodies":{"description":"An object to hold reusable Request Body Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_RequestBody"}},"responses":{"description":"An object to hold reusable Response Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Response"}},"schemas":{"description":"An object to hold reusable Schema Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/SchemaObject"}},"securitySchemes":{"description":"An object to hold reusable Security Scheme Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_SecurityScheme"}}},"additionalProperties":true},"Contact":{"description":"Contact information for the exposed API.","type":"object","properties":{"email":{"description":"The email address of the contact person/organization.\n This MUST be in the format of an email address.","type":["string","null"]},"name":{"description":"The identifying name of the contact person/organization.","type":["string","null"]},"url":{"description":"The URL pointing to the contact information.\n This MUST be in the format of a URL.","type":["string","null"]}},"additionalProperties":true},"CookieStyle":{"type":"string","enum":["form"]},"Encoding":{"description":"A single encoding definition applied to a single schema property.","type":"object","properties":{"allowReserved":{"description":"Determines whether the parameter value SHOULD allow reserved characters,\n as defined by RFC3986 :/?#[]@!$&'()*+,;= to be included without\n percent-encoding. The default value is false. This property SHALL be\n ignored if the request body media type is not\n application/x-www-form-urlencoded or multipart/form-data. If a value is\n explicitly defined, then the value of `contentType` (implicit or\n explicit) SHALL be ignored.","type":"boolean"},"contentType":{"description":"The Content-Type for encoding a specific property.\n Default value depends on the property type:\n for object - application/json;\n for array â€“ the default is defined based on the inner type.\n for all other cases the default is `application/octet-stream`.\n The value can be a specific media type (e.g. application/json),\n a wildcard media type (e.g. image/*), or a comma-separated list of the\n two types.","type":["string","null"]},"explode":{"description":"When this is true, property values of type array or object generate\n separate parameters for each value of the array, or key-value-pair\n of the map. For other types of properties this property has no effect.\n When style is form, the default value is true.\n For all other styles, the default value is false. This property\n SHALL be ignored if the request body media type is\n not application/x-www-form-urlencoded or multipart/form-data. If a value\n is explicitly defined, then the value of `contentType` (implicit or\n explicit) SHALL be ignored.\n\n In this Library this value defaults to false always despite the\n specification.","type":"boolean"},"headers":{"description":"A map allowing additional information to be provided as headers,\n for example Content-Disposition. Content-Type is described separately\n and SHALL be ignored in this section. This property SHALL be ignored\n if the request body media type is not a multipart.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Header"}},"style":{"description":"Describes how a specific property value will be serialized depending\n on its type. See Parameter Object for details on the style property.\n The behavior follows the same values as query parameters, including\n default values. This property SHALL be ignored if the request body\n media type is not application/x-www-form-urlencoded  or\n multipart/form-data. If a value is explicitly defined, then the value of\n `contentType` (implicit or explicit) SHALL be ignored.","anyOf":[{"$ref":"#/components/schemas/QueryStyle"},{"type":"null"}]}},"additionalProperties":true},"Example":{"type":"object","properties":{"description":{"description":"Long description for the example.\n CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"externalValue":{"description":"A URI that points to the literal example.\n This provides the capability to reference examples that cannot\n easily be included in JSON or YAML documents. The `value` field and\n `externalValue` field are mutually exclusive. See the rules for\n resolving Relative References.","type":["string","null"]},"summary":{"description":"Short description for the example.","type":["string","null"]},"value":{"description":"Embedded literal example. The `value` field and `externalValue`\n field are mutually exclusive. To represent examples of\n media types that cannot naturally represented in JSON or YAML,\n use a string value to contain the example, escaping where necessary."}},"additionalProperties":true},"ExternalDocumentation":{"description":"Allows referencing an external resource for extended documentation.","type":"object","properties":{"description":{"description":"A description of the target documentation.\n CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"url":{"description":"REQUIRED. The URL for the target documentation.\n This MUST be in the format of a URL.","type":"string"}},"additionalProperties":true,"required":["url"]},"Header":{"description":"The Header Object follows the structure of the Parameter Object with the\n following changes:\n\n 1) name MUST NOT be specified, it is given in the corresponding headers map.\n 2) in MUST NOT be specified, it is implicitly in header.\n 3) All traits that are affected by the location MUST be applicable to a\n location of header (for example, style).","type":"object","properties":{"description":{"description":"A brief description of the parameter. This could\n contain examples of use. CommonMark syntax MAY be\n used for rich text representation.","type":["string","null"]},"content":true,"deprecated":{"description":"Specifies that a parameter is deprecated and SHOULD\n be transitioned out of usage.","type":["boolean","null"]},"example":true,"examples":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Example"}},"required":{"description":"Determines whether this parameter is mandatory.\n If the parameter location is \"path\", this property\n is REQUIRED and its value MUST be true. Otherwise,\n the property MAY be included and its default value\n is false.","type":"boolean"},"schema":true,"style":{"allOf":[{"$ref":"#/components/schemas/HeaderStyle"}],"default":"simple"}},"additionalProperties":true,"oneOf":[{"description":"The schema defining the type used for the parameter.","type":"object","properties":{"schema":{"$ref":"#/components/schemas/SchemaObject"}},"required":["schema"]},{"description":"A map containing the representations for the parameter. The key is the\n media type and the value describes it. The map MUST only contain one\n entry.","type":"object","properties":{"content":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/MediaType"}}},"required":["content"]}]},"HeaderStyle":{"type":"string","enum":["simple"]},"Info":{"description":"The object provides metadata about the API.\n The metadata MAY be used by the clients if needed,\n and MAY be presented in editing or documentation generation tools for\n convenience.","type":"object","properties":{"title":{"description":"REQUIRED. The title of the application.","type":"string"},"description":{"description":"A description of the API.\n CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"contact":{"description":"The contact information for the exposed API.","anyOf":[{"$ref":"#/components/schemas/Contact"},{"type":"null"}]},"license":{"description":"The license information for the exposed API.","anyOf":[{"$ref":"#/components/schemas/License"},{"type":"null"}]},"summary":{"description":"A short summary of the API.","type":["string","null"]},"termsOfService":{"description":"A URL to the Terms of Service for the API.\n This MUST be in the format of a URL.","type":["string","null"]},"version":{"description":"REQUIRED. The version of the OpenAPI document (which is distinct from\n the OpenAPI Specification version or the API implementation version).","type":"string"}},"additionalProperties":true,"required":["title","version"]},"License":{"description":"License information for the exposed API.","type":"object","properties":{"identifier":{"description":"An [SPDX](https://spdx.org/spdx-specification-21-web-version#h.jxpfx0ykyb60) license expression for the API. The `identifier` field is mutually exclusive of the `url` field.","type":["string","null"]},"name":{"description":"REQUIRED. The license name used for the API.","type":"string"},"url":{"description":"A URL to the license used for the API. This MUST be in the form of a\n URL. The `url` field is mutually exclusive of the `identifier` field.","type":["string","null"]}},"additionalProperties":true,"required":["name"]},"Link":{"description":"The Link object represents a possible design-time link for a response.\n The presence of a link does not guarantee the caller's ability to\n successfully invoke it, rather it provides a known relationship and\n traversal mechanism between responses and other operations.\n\n Unlike dynamic links (i.e. links provided in the response payload),\n the OAS linking mechanism does not require link information in the runtime\n response.\n\n For computing links, and providing instructions to execute them,\n a runtime expression is used for accessing values in an operation\n and using them as parameters while invoking the linked operation.","type":"object","properties":{"description":{"description":"A description of the link.\n CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"operationId":true,"operationRef":true,"parameters":{"description":"A map representing parameters to pass to an operation\n as specified with operationId or identified via operationRef.\n The key is the parameter name to be used, whereas the value\n can be a constant or an expression to be evaluated and passed\n to the linked operation. The parameter name can be qualified\n using the parameter location [{in}.]{name} for operations\n that use the same parameter name in different locations (e.g. path.id).","type":"object","additionalProperties":true},"requestBody":{"description":"A literal value or {expression} to use as a request body\n when calling the target operation."},"server":{"description":"A server object to be used by the target operation.","anyOf":[{"$ref":"#/components/schemas/Server"},{"type":"null"}]}},"additionalProperties":true,"oneOf":[{"description":"A relative or absolute reference to an OAS operation.\n This field is mutually exclusive of the operationId field,\n and MUST point to an Operation Object. Relative operationRef\n values MAY be used to locate an existing Operation Object\n in the OpenAPI definition. See the rules for resolving Relative\n References.","type":"object","properties":{"operationRef":{"type":"string"}},"required":["operationRef"]},{"description":"The name of an existing, resolvable OAS operation,\n as defined with a unique operationId. This field is\n mutually exclusive of the operationRef field.","type":"object","properties":{"operationId":{"type":"string"}},"required":["operationId"]}]},"MediaType":{"type":"object","properties":{"encoding":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Encoding"}},"example":true,"examples":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Example"}},"schema":{"anyOf":[{"$ref":"#/components/schemas/SchemaObject"},{"type":"null"}]}},"additionalProperties":true},"OAuth2Flows":{"type":"object","allOf":[{"oneOf":[{"type":"object","properties":{"implicit":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}}},"required":["authorizationUrl"]}},"required":["implicit"]},{"type":"object","properties":{"password":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["password"]},{"type":"object","properties":{"clientCredentials":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["clientCredentials"]},{"type":"object","properties":{"authorizationCode":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["authorizationUrl","tokenUrl"]}},"required":["authorizationCode"]}]},{"oneOf":[{"type":"object","properties":{"implicit":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}}},"required":["authorizationUrl"]}},"required":["implicit"]},{"type":"object","properties":{"password":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["password"]},{"type":"object","properties":{"clientCredentials":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["clientCredentials"]},{"type":"object","properties":{"authorizationCode":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["authorizationUrl","tokenUrl"]}},"required":["authorizationCode"]}]},{"oneOf":[{"type":"object","properties":{"implicit":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}}},"required":["authorizationUrl"]}},"required":["implicit"]},{"type":"object","properties":{"password":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["password"]},{"type":"object","properties":{"clientCredentials":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["clientCredentials"]},{"type":"object","properties":{"authorizationCode":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["authorizationUrl","tokenUrl"]}},"required":["authorizationCode"]}]},{"oneOf":[{"type":"object","properties":{"implicit":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}}},"required":["authorizationUrl"]}},"required":["implicit"]},{"type":"object","properties":{"password":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["password"]},{"type":"object","properties":{"clientCredentials":{"type":"object","properties":{"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["tokenUrl"]}},"required":["clientCredentials"]},{"type":"object","properties":{"authorizationCode":{"type":"object","properties":{"authorizationUrl":{"type":"string"},"refreshUrl":{"type":["string","null"]},"scopes":{"type":"object","additionalProperties":{"type":"string"},"default":{}},"tokenUrl":{"type":"string"}},"required":["authorizationUrl","tokenUrl"]}},"required":["authorizationCode"]}]}]},"OpenApi":{"type":"object","properties":{"components":{"description":"An element to hold various schemas for the document.","anyOf":[{"$ref":"#/components/schemas/Components"},{"type":"null"}]},"externalDocs":{"description":"Additional external documentation.","anyOf":[{"$ref":"#/components/schemas/ExternalDocumentation"},{"type":"null"}]},"info":{"description":"REQUIRED. Provides metadata about the API.\n The metadata MAY be used by tooling as required.","allOf":[{"$ref":"#/components/schemas/Info"}]},"jsonSchemaDialect":{"description":"The default value for the `$schema` keyword within Schema Objects\n contained within this OAS document. This MUST be in the form of a URI.","type":["string","null"]},"openapi":{"type":"string"},"paths":{"description":"The available paths and operations for the API.","anyOf":[{"$ref":"#/components/schemas/Paths"},{"type":"null"}]},"security":{"description":"A declaration of which security mechanisms can be used across the API.\n\n The list of values includes alternative security requirement objects\n that can be used. Only one of the security requirement objects need to\n be satisfied to authorize a request. Individual operations can override\n this definition. Global security settings may be overridden on a\n per-path basis.","type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}}},"servers":{"description":"An array of Server Objects, which provide connectivity information to a\n target server. If the servers property is not provided, or is an empty\n array, the default value would be a Server Object with a url value of /.","type":"array","items":{"$ref":"#/components/schemas/Server"}},"tags":{"description":"A list of tags used by the document with additional metadata.\n\n The order of the tags can be used to reflect on their order by the\n parsing tools. Not all tags that are used by the Operation Object\n must be declared. The tags that are not declared MAY be organized\n randomly or based on the tool's logic. Each tag name in the list\n MUST be unique.","type":"array","items":{"$ref":"#/components/schemas/Tag"}},"webhooks":{"description":"The incoming webhooks that MAY be received as part of this API and that\n the API consumer MAY choose to implement. Closely related to the\n `callbacks` feature, this section describes requests initiated other\n than by an API call, for example by an out of band registration. The key\n name is a unique string to refer to each webhook, while the (optionally\n referenced) Path Item Object describes a request that may be initiated\n by the API provider and the expected responses.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_PathItem"}}},"additionalProperties":true,"required":["openapi","info"]},"Operation":{"description":"Describes a single API operation on a path.","type":"object","properties":{"description":{"description":"A verbose explanation of the operation behavior.\n CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"callbacks":{"description":"Callbacks for the operation.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Map_of_ReferenceOr_for_PathItem"}},"deprecated":{"description":"Declares this operation to be deprecated.Default value is false.","type":"boolean"},"externalDocs":{"description":"Additional external documentation for this operation.","anyOf":[{"$ref":"#/components/schemas/ExternalDocumentation"},{"type":"null"}]},"operationId":{"description":"Unique string used to identify the operation.\n The id MUST be unique among all operations described in the API.\n Tools and libraries MAY use the operationId to uniquely identify\n an operation, therefore, it is RECOMMENDED to follow common\n programming naming conventions.","type":["string","null"]},"parameters":{"description":"A list of parameters that are applicable for this operation.\n If a parameter is already defined at the Path Item, the new\n definition will override it but can never remove it.\n The list MUST NOT include duplicated parameters. A unique\n parameter is defined by a combination of a name and location.\n The list can use the Reference Object to link to parameters\n that are defined at the OpenAPI Object's components/parameters.","type":"array","items":{"$ref":"#/components/schemas/ReferenceOr_for_Parameter"}},"requestBody":{"description":"The request body applicable for this operation.\n The requestBody is fully supported in HTTP methods\n where the HTTP 1.1 specification RFC7231 has explicitly\n defined semantics for request bodies. In other cases where\n the HTTP spec is vague (such as\n [GET](https://tools.ietf.org/html/rfc7231#section-4.3.1),\n [HEAD](https://tools.ietf.org/html/rfc7231#section-4.3.2) and\n [DELETE](https://tools.ietf.org/html/rfc7231#section-4.3.5)),\n requestBody is permitted but does not have well-defined semantics and\n SHOULD be avoided if possible.","anyOf":[{"$ref":"#/components/schemas/ReferenceOr_for_RequestBody"},{"type":"null"}]},"responses":{"description":"The list of possible responses as they are returned\n from executing this operation.","anyOf":[{"$ref":"#/components/schemas/Responses"},{"type":"null"}]},"security":{"description":"A declaration of which security mechanisms can be used for this\n operation. The list of values includes alternative security\n requirement objects that can be used. Only one of the security\n requirement objects need to be satisfied to authorize a request.\n This definition overrides any declared top-level security. To remove\n a top-level security declaration, an empty array can be used.","type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}}},"servers":{"description":"An alternative server array to service this operation.\n If an alternative server object is specified at the\n Path Item Object or Root level, it will be overridden by this value.","type":"array","items":{"$ref":"#/components/schemas/Server"}},"summary":{"description":"A short summary of what the operation does.","type":["string","null"]},"tags":{"description":"A list of tags for API documentation control.\n Tags can be used for logical grouping of operations\n by resources or any other qualifier.","type":"array","items":{"type":"string"}}},"additionalProperties":true},"Parameter":{"oneOf":[{"description":"Describes a single operation parameter.\n\n A unique parameter is defined by a combination of a name and location.","type":"object","properties":{"description":{"description":"A brief description of the parameter. This could\n contain examples of use. CommonMark syntax MAY be\n used for rich text representation.","type":["string","null"]},"allow_empty_value":{"description":"Sets the ability to pass empty-valued parameters. This is\n valid only for query parameters and allows sending a parameter\n with an empty value. Default value is false. If style is used,\n and if behavior is n/a (cannot be serialized), the value of\n allowEmptyValue SHALL be ignored.","type":["boolean","null"]},"allow_reserved":{"description":"Determines whether the parameter value SHOULD allow reserved\n characters, as defined by RFC3986 :/?#[]@!$&'()*+,;= to be included\n without percent-encoding. This property only applies to parameters\n with an in value of query. The default value is false.","type":"boolean"},"content":true,"deprecated":{"description":"Specifies that a parameter is deprecated and SHOULD\n be transitioned out of usage.","type":["boolean","null"]},"example":true,"examples":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Example"}},"explode":{"type":["boolean","null"]},"in":{"type":"string","const":"query"},"name":{"description":"REQUIRED. The name of the parameter. Parameter names are case sensitive.\n If in is \"path\", the name field MUST correspond to the associated path\n segment from the path field in the Paths Object. See Path Templating for\n further information.\n\n If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or\n \"Authorization\", the parameter definition SHALL be ignored.\n\n For all other cases, the name corresponds to the parameter name\n used by the in property.","type":"string"},"required":{"description":"Determines whether this parameter is mandatory.\n If the parameter location is \"path\", this property\n is REQUIRED and its value MUST be true. Otherwise,\n the property MAY be included and its default value\n is false.","type":"boolean"},"schema":true,"style":{"description":"Describes how the parameter value will be serialized depending on\n the type of the parameter value. Default values (based on value of\n in): for query - form; for path - simple; for header - simple; for\n cookie - form.","allOf":[{"$ref":"#/components/schemas/QueryStyle"}],"default":"form"}},"additionalProperties":true,"oneOf":[{"description":"The schema defining the type used for the parameter.","type":"object","properties":{"schema":{"$ref":"#/components/schemas/SchemaObject"}},"required":["schema"]},{"description":"A map containing the representations for the parameter. The key is the\n media type and the value describes it. The map MUST only contain one\n entry.","type":"object","properties":{"content":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/MediaType"}}},"required":["content"]}],"required":["in","name"]},{"description":"Describes a single operation parameter.\n\n A unique parameter is defined by a combination of a name and location.","type":"object","properties":{"description":{"description":"A brief description of the parameter. This could\n contain examples of use. CommonMark syntax MAY be\n used for rich text representation.","type":["string","null"]},"content":true,"deprecated":{"description":"Specifies that a parameter is deprecated and SHOULD\n be transitioned out of usage.","type":["boolean","null"]},"example":true,"examples":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Example"}},"explode":{"type":["boolean","null"]},"in":{"type":"string","const":"header"},"name":{"description":"REQUIRED. The name of the parameter. Parameter names are case sensitive.\n If in is \"path\", the name field MUST correspond to the associated path\n segment from the path field in the Paths Object. See Path Templating for\n further information.\n\n If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or\n \"Authorization\", the parameter definition SHALL be ignored.\n\n For all other cases, the name corresponds to the parameter name\n used by the in property.","type":"string"},"required":{"description":"Determines whether this parameter is mandatory.\n If the parameter location is \"path\", this property\n is REQUIRED and its value MUST be true. Otherwise,\n the property MAY be included and its default value\n is false.","type":"boolean"},"schema":true,"style":{"description":"Describes how the parameter value will be serialized depending on\n the type of the parameter value. Default values (based on value of\n in): for query - form; for path - simple; for header - simple; for\n cookie - form.","allOf":[{"$ref":"#/components/schemas/HeaderStyle"}],"default":"simple"}},"additionalProperties":true,"oneOf":[{"description":"The schema defining the type used for the parameter.","type":"object","properties":{"schema":{"$ref":"#/components/schemas/SchemaObject"}},"required":["schema"]},{"description":"A map containing the representations for the parameter. The key is the\n media type and the value describes it. The map MUST only contain one\n entry.","type":"object","properties":{"content":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/MediaType"}}},"required":["content"]}],"required":["in","name"]},{"description":"Describes a single operation parameter.\n\n A unique parameter is defined by a combination of a name and location.","type":"object","properties":{"description":{"description":"A brief description of the parameter. This could\n contain examples of use. CommonMark syntax MAY be\n used for rich text representation.","type":["string","null"]},"content":true,"deprecated":{"description":"Specifies that a parameter is deprecated and SHOULD\n be transitioned out of usage.","type":["boolean","null"]},"example":true,"examples":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Example"}},"explode":{"type":["boolean","null"]},"in":{"type":"string","const":"path"},"name":{"description":"REQUIRED. The name of the parameter. Parameter names are case sensitive.\n If in is \"path\", the name field MUST correspond to the associated path\n segment from the path field in the Paths Object. See Path Templating for\n further information.\n\n If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or\n \"Authorization\", the parameter definition SHALL be ignored.\n\n For all other cases, the name corresponds to the parameter name\n used by the in property.","type":"string"},"required":{"description":"Determines whether this parameter is mandatory.\n If the parameter location is \"path\", this property\n is REQUIRED and its value MUST be true. Otherwise,\n the property MAY be included and its default value\n is false.","type":"boolean"},"schema":true,"style":{"description":"Describes how the parameter value will be serialized depending on\n the type of the parameter value. Default values (based on value of\n in): for query - form; for path - simple; for header - simple; for\n cookie - form.","allOf":[{"$ref":"#/components/schemas/PathStyle"}],"default":"simple"}},"additionalProperties":true,"oneOf":[{"description":"The schema defining the type used for the parameter.","type":"object","properties":{"schema":{"$ref":"#/components/schemas/SchemaObject"}},"required":["schema"]},{"description":"A map containing the representations for the parameter. The key is the\n media type and the value describes it. The map MUST only contain one\n entry.","type":"object","properties":{"content":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/MediaType"}}},"required":["content"]}],"required":["in","name"]},{"description":"Describes a single operation parameter.\n\n A unique parameter is defined by a combination of a name and location.","type":"object","properties":{"description":{"description":"A brief description of the parameter. This could\n contain examples of use. CommonMark syntax MAY be\n used for rich text representation.","type":["string","null"]},"content":true,"deprecated":{"description":"Specifies that a parameter is deprecated and SHOULD\n be transitioned out of usage.","type":["boolean","null"]},"example":true,"examples":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Example"}},"explode":{"type":["boolean","null"]},"in":{"type":"string","const":"cookie"},"name":{"description":"REQUIRED. The name of the parameter. Parameter names are case sensitive.\n If in is \"path\", the name field MUST correspond to the associated path\n segment from the path field in the Paths Object. See Path Templating for\n further information.\n\n If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or\n \"Authorization\", the parameter definition SHALL be ignored.\n\n For all other cases, the name corresponds to the parameter name\n used by the in property.","type":"string"},"required":{"description":"Determines whether this parameter is mandatory.\n If the parameter location is \"path\", this property\n is REQUIRED and its value MUST be true. Otherwise,\n the property MAY be included and its default value\n is false.","type":"boolean"},"schema":true,"style":{"description":"Describes how the parameter value will be serialized depending on\n the type of the parameter value. Default values (based on value of\n in): for query - form; for path - simple; for header - simple; for\n cookie - form.","allOf":[{"$ref":"#/components/schemas/CookieStyle"}],"default":"form"}},"additionalProperties":true,"oneOf":[{"description":"The schema defining the type used for the parameter.","type":"object","properties":{"schema":{"$ref":"#/components/schemas/SchemaObject"}},"required":["schema"]},{"description":"A map containing the representations for the parameter. The key is the\n media type and the value describes it. The map MUST only contain one\n entry.","type":"object","properties":{"content":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/MediaType"}}},"required":["content"]}],"required":["in","name"]}]},"PathItem":{"description":"Describes the operations available on a single path.\n A Path Item MAY be empty, due to ACL constraints.\n The path itself is still exposed to the documentation\n viewer but they will not know which operations and\n parameters are available.","type":"object","properties":{"description":{"description":"An optional, string description, intended to apply to all operations in\n this path. CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"$ref":{"description":"Allows for a referenced definition of this path item. The referenced\n structure MUST be in the form of a Path Item Object.  In case a Path\n Item Object field appears both in the defined object and the referenced\n object, the behavior is undefined. See the rules for resolving Relative\n References.","type":["string","null"]},"delete":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]},"get":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]},"head":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]},"options":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]},"parameters":{"description":"A list of parameters that are applicable for all the\n operations described under this path. These parameters\n can be overridden at the operation level, but cannot be\n removed there. The list MUST NOT include duplicated parameters.\n A unique parameter is defined by a combination of a name and location.\n The list can use the Reference Object to link to parameters that\n are defined at the OpenAPI Object's components/parameters.","type":"array","items":{"$ref":"#/components/schemas/ReferenceOr_for_Parameter"}},"patch":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]},"post":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]},"put":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]},"servers":{"description":"An alternative server array to service all operations in this path.","type":"array","items":{"$ref":"#/components/schemas/Server"}},"summary":{"description":"An optional, string summary, intended to apply to all operations in\n this path.","type":["string","null"]},"trace":{"anyOf":[{"$ref":"#/components/schemas/Operation"},{"type":"null"}]}},"additionalProperties":true},"PathStyle":{"type":"string","enum":["matrix","label","simple"]},"Paths":{"description":"Holds the relative paths to the individual endpoints and\n their operations. The path is appended to the URL from the\n Server Object in order to construct the full URL. The Paths\n MAY be empty, due to Access Control List (ACL) constraints.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_PathItem"}},"QueryStyle":{"type":"string","enum":["form","spaceDelimited","pipeDelimited","deepObject"]},"ReferenceOr_for_Example":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/Example"}]},"ReferenceOr_for_Header":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/Header"}]},"ReferenceOr_for_Link":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/Link"}]},"ReferenceOr_for_Map_of_ReferenceOr_for_PathItem":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_PathItem"}}]},"ReferenceOr_for_Parameter":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/Parameter"}]},"ReferenceOr_for_PathItem":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/PathItem"}]},"ReferenceOr_for_RequestBody":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/RequestBody"}]},"ReferenceOr_for_Response":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/Response"}]},"ReferenceOr_for_SecurityScheme":{"anyOf":[{"type":"object","properties":{"description":{"description":"A description which by default SHOULD override that of the\n referenced component. CommonMark syntax MAY be used for rich text\n representation. If the referenced object-type does not allow a\n `description` field, then this field has no effect.","type":["string","null"]},"$ref":{"description":"REQUIRED. The reference identifier. This MUST be in the form of a\n URI.","type":"string"},"summary":{"description":"A short summary which by default SHOULD override that of the\n referenced component. If the referenced object-type does not allow a\n `summary` field, then this field has no effect.","type":["string","null"]}},"required":["$ref"]},{"$ref":"#/components/schemas/SecurityScheme"}]},"RequestBody":{"type":"object","properties":{"description":{"description":"A brief description of the request body.\n This could contain examples of use.\n CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"content":{"description":"REQUIRED. The content of the request body.\n The key is a media type or media type range and\n the value describes it. For requests that match\n multiple keys, only the most specific key is applicable.\n  e.g. text/plain overrides text/*","type":"object","additionalProperties":{"$ref":"#/components/schemas/MediaType"}},"required":{"description":"Determines if the request body is required in the\n request. Defaults to false.","type":"boolean"}},"additionalProperties":true},"Response":{"type":"object","properties":{"description":{"description":"REQUIRED. A description of the response.\n CommonMark syntax MAY be used for rich text representation.","type":"string"},"content":{"description":"A map containing descriptions of potential response payloads.\n The key is a media type or media type range and the value\n describes it. For responses that match multiple keys,\n only the most specific key is applicable. e.g. text/plain\n overrides text/*","type":"object","additionalProperties":{"$ref":"#/components/schemas/MediaType"}},"headers":{"description":"Maps a header name to its definition.\n RFC7230 states header names are case insensitive.\n If a response header is defined with the name \"Content-Type\",\n it SHALL be ignored.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Header"}},"links":{"description":"A map of operations links that can be followed from the response.\n The key of the map is a short name for the link, following\n the naming constraints of the names for Component Objects.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Link"}}},"additionalProperties":true,"required":["description"]},"Responses":{"type":"object","properties":{"default":{"description":"The documentation of responses other than the ones declared\n for specific HTTP response codes. Use this field to cover\n undeclared responses.","anyOf":[{"$ref":"#/components/schemas/ReferenceOr_for_Response"},{"type":"null"}]}},"additionalProperties":{"$ref":"#/components/schemas/ReferenceOr_for_Response"}},"SchemaObject":{"type":"object","properties":{"example":{"description":"A free-form property to include an example of an instance for this\n schema. To represent examples that cannot be naturally represented in\n JSON or YAML, a string value can be used to contain the example with\n escaping where necessary. **Deprecated:** The `example` property has\n been deprecated in favor of the JSON Schema `examples` keyword. Use\n of `example` is discouraged, and later versions of this\n specification may remove it."},"externalDocs":{"description":"Additional external documentation for this schema.","anyOf":[{"$ref":"#/components/schemas/ExternalDocumentation"},{"type":"null"}]}}},"SecurityScheme":{"description":"Defines a security scheme that can be used by the operations.\n Supported schemes are HTTP authentication, an API key (either as a\n header or as a query parameter), OAuth2's common flows (implicit, password,\n application and access code) as defined in RFC6749, and OpenID Connect\n Discovery.","oneOf":[{"type":"object","properties":{"description":{"type":["string","null"]},"type":{"type":"string","const":"apiKey"},"in":{"$ref":"#/components/schemas/ApiKeyLocation"},"name":{"type":"string"}},"additionalProperties":true,"required":["type","in","name"]},{"type":"object","properties":{"description":{"type":["string","null"]},"type":{"type":"string","const":"http"},"bearerFormat":{"type":["string","null"]},"scheme":{"type":"string"}},"additionalProperties":true,"required":["type","scheme"]},{"type":"object","properties":{"description":{"type":["string","null"]},"type":{"type":"string","const":"oauth2"},"flows":{"$ref":"#/components/schemas/OAuth2Flows"}},"additionalProperties":true,"required":["type","flows"]},{"type":"object","properties":{"description":{"type":["string","null"]},"type":{"type":"string","const":"openIdConnect"},"openIdConnectUrl":{"type":"string"}},"additionalProperties":true,"required":["type","openIdConnectUrl"]},{"type":"object","properties":{"description":{"type":["string","null"]},"type":{"type":"string","const":"mutualTLS"}},"additionalProperties":true,"required":["type"]}]},"Server":{"description":"An object representing a Server.","type":"object","properties":{"description":{"description":"An optional string describing the host designated\n by the URL. CommonMark syntax MAY be used for rich\n text representation.","type":["string","null"]},"url":{"description":"REQUIRED. A URL to the target host.\n This URL supports Server Variables and MAY be relative,\n to indicate that the host location is relative to the\n location where the OpenAPI document is being served.\n Variable substitutions will be made when a variable\n is named in {brackets}.","type":"string"},"variables":{"description":"A map between a variable name and its value.\n The value is used for substitution in the server's URL template.","type":"object","additionalProperties":{"$ref":"#/components/schemas/ServerVariable"}}},"additionalProperties":true,"required":["url"]},"ServerVariable":{"description":"An object representing a Server Variable\n for server URL template substitution.","type":"object","properties":{"description":{"description":"An optional description for the server\n variable. CommonMark syntax MAY be used\n for rich text representation.","type":["string","null"]},"default":{"description":"REQUIRED. The default value to use for substitution,\n and to send, if an alternate value is not supplied.\n Unlike the Schema Object's default, this value MUST\n be provided by the consumer.","type":"string"},"enum":{"description":"An enumeration of string values to be\n used if the substitution options are from a limited set.","type":"array","items":{"type":"string"}}},"additionalProperties":true,"required":["default"]},"Side":{"type":"string","enum":["Buy","Sell"]},"Tag":{"description":"Adds metadata to a single tag that is used by the\n Operation Object. It is not mandatory to have a\n Tag Object per tag defined in the Operation Object instances.","type":"object","properties":{"description":{"description":"A description for the tag.\n CommonMark syntax MAY be used for rich text representation.","type":["string","null"]},"externalDocs":{"description":"Additional external documentation for this tag.","anyOf":[{"$ref":"#/components/schemas/ExternalDocumentation"},{"type":"null"}]},"name":{"description":"REQUIRED. The name of the tag.","type":"string"}},"additionalProperties":true,"required":["name"]},"TradeRef":{"type":"object","properties":{"levels":{"type":"array","items":{"type":"number","format":"double"}},"side":{"$ref":"#/components/schemas/Side"}},"required":["side","levels"]},"User":{"type":"object","properties":{"name":{"type":"string"}},"required":["name"]}}}}